.. highlightlang:: c
.. _xref_source: 

================
ソースコード構成
================

概要
====

lucille レンダラのコアを構成するソースコードはすべて ``src`` ディレクトリに配置されている.

::

  src/
    base/               ベクトル型、可変長配列などの基本データ構造などの実装.
    display/            各種ディスプレイドライバの実装
    gui/                レンダラを呼び出す GUI プログラム(予定)
    lsh/                コマンドラインレンダラプログラム(lucille shell)
    render/             レンダラコアの実装
    ri/                 RenderMan Interface の実装
    sl/                 シェーダコンパイラ(変更予定)
    testbed/            レンダラコアの Visual テスト環境(開発者向け)
    transport/          レイトレーシングなどの光輸送アルゴリズムの実装

ヘッダとソースの関係
--------------------

lucille では、RIB インターフェイスヘッダファイル(``ri.h``)以外は、ヘッダファイルとそこで定義してある関数定義の実装ソースコードが同じディレクトリになるようになっている. 例として、 ``list.h`` はリンクドリストの関数定義がしてあり、そこで定義されている ri_list_append() 関数は同じディレクトリにある ``list.c`` においてその実装がなされている.

ポータビリティ
--------------

lucille レンダラはなるたけ OS に依存せずにクロスプラットフォームで動作するように設計されている. 最低限サポートするプラットフォームは以下の通りである.

* Mac OS X(Intel)
* Linux(Intel)
* Windows(Intel)

各ソースディレクトリの説明
==========================

以下では、各ソースディレクトリには何があるかについて解説する.

base
----

base には、レンダラを構成する上で基本となるモジュールの実装が配置されている. 動的配列、スタックデータ構造、キューデータ構造、ベクトル演算、ハッシュ関数、スレッド、アトミック操作などが含まれている.

base 以外のディレクトリにあるソースはすべてこの base で提供されるモジュールを利用している.

display
-------

display にはディスプレイドライバのコードが置かれている. 

* *framebufferdrv* ネイティブの GUI にレンダリング画像を表示する(Windows は Win32 API, Linux は X11, Mac OS X は GLUT を利用する)
* *hdrdrv* Ward HDR 形式でレンダリング画像をファイルに出力する.
* *openexrdrv* OpenEXR 形式でレンダリング画像をファイルに出力する. コンフィグ時にシステムに OpenEXR ライブラリがインストールされているときのみコンパイルされる.
* *sockdrv* TCP/IP にレンダリング画像を出力する. sock は通常 lucille 用フレームバッファビューアである ``rockenfield`` と組み合わせて利用する. 

